// base reqs
apply plugin: 'java'
apply plugin: 'groovy'

// publishing
apply plugin: "base"
apply plugin: "maven"
apply plugin: "signing"

// IDE support
apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'io.jdev.html2js'
version = '0.2-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

ext {
	groovyVersion = "2.3.0"
	spockVersion = "0.7-groovy-2.0"

	isSnapshot = version.endsWith("-SNAPSHOT")
	poms = []
	afterEvaluate {
		poms*.whenConfigured { pom ->
			pomModifications.each {
				configure(pom, it)
			}
		}
	}
	pomModifications = []
	modifyPom = { pomModifications << it }
}

repositories {
	mavenCentral()
}

dependencies {
	testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion
	testCompile("org.spockframework:spock-core:0.7-groovy-2.0") { exclude module: 'groovy-all' } // as this pulls the wrong version in as a trans dependency
}

test {
	systemProperties "template.dest.dir": "$buildDir/js"
	testLogging {
		exceptionFormat = 'full'
	}
}

signing {
	sign configurations.archives
	required { !isSnapshot && !System.env.TRAVIS }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

tasks.withType(Upload) {
	repositories.withType(org.gradle.api.artifacts.maven.MavenResolver) {
		poms << it.pom
	}
}

uploadArchives { task ->
	repositories.mavenDeployer {
		if(!isSnapshot) {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
		}
		uniqueVersion = false
		gradle.taskGraph.whenReady { taskGraph ->
			if (taskGraph.hasTask(task)) {
				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
				}
				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
				}
			}
		}
	}
}

modifyPom {
	project {
		name "HTML 2 JS"
		description "An implementation of grunt-html2js for the JVM. Bundles AngularJS HTML templates into Javascript files."
		url "https://github.com/tomdcc/html2js-jvm/"
		inceptionYear "2014"
		licenses {
			license {
				name 'The MIT Licence'
				url 'http://opensource.org/licenses/MIT'
				distribution 'repo'
			}
		}
		scm {
			url "https://github.com/tomdcc/html2js-jvm/"
		}
		developers {
			developer {
				id "tomdcc"
				name "Tom Dunstan"
			}
		}
	}
	dependencies.removeAll(dependencies.findAll { it.scope == "test" })
}
	
task uploadSnapshots << {
	if(!isSnapshot) {
			println "Not uploading snapshot as not a snapshot version"
	}
}

if(isSnapshot) {
	uploadSnapshots.dependsOn(uploadArchives)
}

// IDE support
eclipse {
	classpath {
		containers.clear()
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
	}
}
